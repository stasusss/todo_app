{"version":3,"sources":["components/Header/Header.js","components/Todo/Todo.js","components/Shapes.js","components/TodoList/TodoList.js","components/Main/Main.js","components/TodosFilter/TodosFilter.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","state","input","id","handleChange","event","setState","target","value","replace","handleEnterPress","addTodo","props","key","title","completed","prevState","className","this","onKeyDown","onChange","placeholder","Component","Todo","PropTypes","shape","string","number","bool","todoList","todo","todoListCopy","type","todoId","todos","map","item","currentItem","getTodos","checked","htmlFor","onClick","findId","parentElement","firstElementChild","filter","currentTodo","todosCopy","TodoList","Main","isAllTodoToggle","TodosFilter","activeFilter","setActiveFilter","resetFilter","preventDefault","filterTodos","showCompletedTodos","href","onFocus","Footer","length","uncompletedTodos","showActiveTodos","App","some","items","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.592b28d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Header extends Component {\n  state = {\n    input: '',\n    id: 0,\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      input: event.target.value.replace(/[^\\wА-Яа-я\\s]|^\\s+$/g, ''),\n    });\n  }\n\n  handleEnterPress = (event) => {\n    const { addTodo } = this.props;\n    const { input, id } = this.state;\n\n    if (event.key === 'Enter') {\n      const todo = ({\n        title: input,\n        id,\n        completed: false,\n      });\n\n      addTodo(todo);\n\n      this.setState(prevState => ({\n        input: '',\n        id: prevState.id + 1,\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>TODOS</h1>\n        <input\n          className=\"new-todo\"\n          value={this.state.input}\n          onKeyDown={this.handleEnterPress}\n          onChange={this.handleChange}\n          placeholder=\"Write your todo\"\n        />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from '../Shapes';\n\nexport const Todo = (props) => {\n  const { todoList, todo, todoListCopy } = props;\n\n  const deleteTodo = (event) => {\n    const findId = event.target.parentElement.firstElementChild.id;\n    const todos = todoList\n      .filter(currentTodo => currentTodo.id !== +findId);\n    const todosCopy = props.todoListCopy\n      .filter(currentTodo => currentTodo.id !== +findId);\n\n    props.getTodos(todos, todosCopy);\n  };\n\n  const changeStatus = (event) => {\n    const todoId = event.target.id;\n\n    const todos = props.todoList.map((item) => {\n      const currentItem = item;\n\n      if (currentItem.id === +todoId) {\n        currentItem.completed = !item.completed;\n      }\n\n      return currentItem;\n    });\n\n    props.getTodos(todos, todoListCopy);\n  };\n\n  return (\n    <li\n      className={todo.completed ? 'completed' : ''}\n      key={todo.id}\n    >\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          id={todo.id}\n          type=\"checkbox\"\n          onChange={changeStatus}\n          checked={todo.completed}\n        />\n        <label htmlFor={todo.id}>{todo.title}</label>\n        <button\n          className=\"destroy\"\n          type=\"button\"\n          onClick={deleteTodo}\n        />\n      </div>\n      <input className=\"edit\" type=\"text\" />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: todoShape.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  todoListCopy: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  getTodos: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todoShape = PropTypes.shape({\n  title: PropTypes.string,\n  id: PropTypes.number,\n  completed: PropTypes.bool,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from '../Shapes';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = props => (\n  <ul className=\"todo-list\">\n    {\n      props.todoListCopy.map(todo => (\n        <Todo {...props} todo={todo} key={todo.id} />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  todoListCopy: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from '../TodoList/TodoList';\n\nexport const Main = props => (\n  <section className=\"main\">\n    <input\n      className=\"toggle-all\"\n      id=\"toggle-all\"\n      type=\"checkbox\"\n      onChange={props.isAllTodoToggle}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <TodoList\n      {...props}\n    />\n  </section>\n);\n\nMain.propTypes = {\n  isAllTodoToggle: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { todoShape } from '../Shapes';\n\nexport class TodosFilter extends Component {\n  state = {\n    activeFilter: 'All',\n  }\n\n  setActiveFilter = (event) => {\n    this.setState({\n      activeFilter: event.target.id,\n    });\n  }\n\n  resetFilter = (event) => {\n    event.preventDefault();\n    this.props.getTodos(this.props.todoList, this.props.todoList);\n  }\n\n  filterTodos = (event) => {\n    event.preventDefault();\n\n    const todosCopy = this.props.todoList\n      .filter(todo => todo.completed === false);\n\n    this.props.getTodos(this.props.todoList, todosCopy);\n  }\n\n  showCompletedTodos = (event) => {\n    event.preventDefault();\n\n    const todosCopy = this.props.todoList\n      .filter(todo => todo.completed === true);\n\n    this.props.getTodos(this.props.todoList, todosCopy);\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            className={this.state.activeFilter === 'All' ? 'selected' : ''}\n            href=\"#/\"\n            id=\"All\"\n            onFocus={this.setActiveFilter}\n            onClick={this.resetFilter}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            className={this.state.activeFilter === 'Active' ? 'selected' : ''}\n            href=\"#/active\"\n            id=\"Active\"\n            onFocus={this.setActiveFilter}\n            onClick={this.filterTodos}\n          >\n            Active\n          </a>\n        </li>\n        <li>\n          <a\n            className={\n              this.state.activeFilter === 'completed'\n                ? 'selected'\n                : ''\n            }\n            href=\"#/completed\"\n            id=\"Completed\"\n            onFocus={this.setActiveFilter}\n            onClick={this.showCompletedTodos}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\nimport { todoShape } from '../Shapes';\n\nexport const Footer = ({ todoList, todoListCopy, getTodos }) => {\n  const showActiveTodos = () => {\n    const uncompletedTodos = todoList\n      .filter(todo => todo.completed === false).length;\n\n    if (!uncompletedTodos) {\n      return '';\n    }\n\n    return `${uncompletedTodos} items left`;\n  };\n\n  const clearCompletedTodos = (event) => {\n    event.preventDefault();\n\n    const todos = todoList\n      .filter(todo => todo.completed === false);\n    const todosCopy = todoListCopy\n      .filter(todo => todo.completed === false);\n\n    getTodos(todos, todosCopy);\n  };\n\n  return (\n    <footer className={todoList.length ? 'footer' : 'footer--hidden'}>\n      <span className=\"todo-count\">\n        {\n          showActiveTodos()\n        }\n      </span>\n      <TodosFilter\n        todoList={todoList}\n        todoListCopy={todoListCopy}\n        getTodos={getTodos}\n      />\n      <button\n        className=\"clear-completed\"\n        type=\"button\"\n        onClick={clearCompletedTodos}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  todoListCopy: PropTypes.arrayOf(PropTypes.shape(todoShape)).isRequired,\n  getTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\nimport { Footer } from './components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    todoListCopy: [],\n  }\n\n  addTodo = (todo) => {\n    if (!todo.title.length) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, todo],\n      todoListCopy: [...prevState.todoListCopy, todo],\n    }));\n  }\n\n  isAllTodoToggle = () => {\n    this.setState((prevState) => {\n      if (prevState.todoList.some(todo => todo.completed === false)) {\n        const items = prevState.todoList.map((item) => {\n          const currentItem = item;\n\n          currentItem.completed = true;\n\n          return currentItem;\n        });\n\n        return {\n          todoList: items,\n          todoListCopy: items,\n        };\n      }\n\n      const items = prevState.todoList.map((item) => {\n        const currentItem = item;\n\n        currentItem.completed = false;\n\n        return currentItem;\n      });\n\n      return {\n        todoList: items,\n        todoListCopy: items,\n      };\n    });\n  }\n\n  getTodos = (todos, todosCopy) => {\n    this.setState({\n      todoListCopy: todosCopy,\n      todoList: todos,\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <Main\n          todoList={this.state.todoList}\n          todoListCopy={this.state.todoListCopy}\n          isAllTodoToggle={this.isAllTodoToggle}\n          getTodos={this.getTodos}\n        />\n        <Footer\n          todoList={this.state.todoList}\n          todoListCopy={this.state.todoListCopy}\n          getTodos={this.getTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}